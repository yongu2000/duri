plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // SPRING
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-messaging'

    // MAIL
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // P6SPY
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // DB
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AWS
    implementation platform("software.amazon.awssdk:bom:2.31.18")
    implementation "software.amazon.awssdk:s3"
    implementation "software.amazon.awssdk:auth"
    implementation "software.amazon.awssdk:regions"

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // SPRING REST DOC
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated"
}

sourceSets {
    main {
        java.srcDirs("build/generated/sources/annotationProcessor/java/main")
    }
}

clean {
    delete file('build/generated/sources/annotationProcessor/java/main')
}

// Q클래스 생성
// ./gradlew clean build


// SPRING REST DOC
ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy asciidoctor
}

tasks.named('asciidoctor') {
    dependsOn test
    inputs.dir snippetsDir
    finalizedBy copyDocument
    doFirst {
        delete file('src/main/resources/static/docs')
    }
}

tasks.register('copyDocument', Copy) {
    dependsOn tasks.named('asciidoctor')
    from file('build/docs/asciidoc')
    into file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}